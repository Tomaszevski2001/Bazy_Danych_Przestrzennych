create extension postgis;

select * from public.airports
Select 

----zad4--------
--Wyznacz liczbę budynków (tabela: popp, atrybut: f_codedesc, reprezentowane, jako punkty)
--położonych w odległości mniejszej niż 1000 m od głównych rzek. Budynki spełniające to
--kryterium zapisz do osobnej tabeli tableB

--select.count zwraca liczbe wierszy zgodnie z naszymi kryteriami
--ST_DWithin - zwraca prade jezeli nasza geometria jest spełniona 

 Select pop.geom from pop;


--wykonanie


select count(popp.f_codedesc) as BUDYNKI  into tableB
 from popp, majrivers
 where ST_DWithin(popp.geom, majrivers.geom, 1000.0) and f_codedesc='Building';
 
 select * from tableB
 
 
 
 
 ----zad5--------
--Utwórz tabelę o nazwie airportsNew. Z tabeli airports do zaimportuj nazwy lotnisk, ich
--geometrię, a także atrybut elev, reprezentujący wysokość n.p.m.


SELECT name, elev, geom INTO airportsNew 
FROM airports


---Znajdź lotnisko, które położone jest najbardziej na zachód i najbardziej na wschód


SELECT name as wschodnie_lotnisko FROM airportsNew
ORDER BY ST_X(geom) DESC
LIMIT 1;

SELECT name zachodnie_lotnisko FROM airportsNew
ORDER BY ST_X(geom) ASC
LIMIT 1;

--b) Do tabeli airportsNew dodaj nowy obiekt - lotnisko, które położone jest w punkcie
--środkowym drogi pomiędzy lotniskami znalezionymi w punkcie a. Lotnisko nazwij airportB.
--Wysokość n.p.m. przyjmij dowolną.

--ST_Centroid- oblicza punkt znajdujacy sie na samym srodku




INSERT INTO airportsNew(name,elev,geom) VALUES ('NOWE_LOTNISKO',111,(SELECT ST_Centroid(ST_ShortestLine
((SELECT geom FROM airportsNew WHERE name LIKE 'ANNETTE ISLAND'), 
(SELECT geom FROM airportsNew WHERE name LIKE 'ATKA'))))
);

SELECT * FROM airportsNew	 
	 
	 
	 
	 
	 
	 
	 
	 

--6
Select ST_area(St_buffer(st_ShortestLine(airports.geom, lakes.geom), 1000)) as area
from airports, lakes
where lakes.names='Iliamna Lake' and airports.name='AMBLER';

--7
Select vegdesc as description, Sum(ST_Area(trees.geom)) as total_area
from trees,swamp,tundra
where ST_Contains(tundra.geom, trees.geom) or ST_Contains(swamp.geom, trees.geom)
group by vegdesc;




							
----6----
--Wyznacz pole powierzchni obszaru, który oddalony jest mniej niż 1000 jednostek od najkrótszej
--linii łączącej jezioro o nazwie ‘Iliamna Lake’ i lotnisko o nazwie „AMBLER”

--ST_AREA -FUNKCJA ZWRACJACA POLE
--ST-BUFFER-Oblicza WIELOKĄT lub WIELOKĄT reprezentujący wszystkie punkty, których odległość od geometrii/geografii jest mniejsza lub równa podanej odległości.
--ST_SHORTLINE- ZWRACA NAJKRÓTSZA DROGE MIEDZY 2 PUNKTAMI
SELECT lakes.geom FROM lakes where lakes.names='Iliamna Lake';
SELECT airports.geom FROM airports where airports.name='AMBLER';


--wykonanie

Select ST_area(St_buffer(st_ShortestLine(airports.geom, lakes.geom), 1000)) as ODLEGLOSC
from airports, lakes
where lakes.names='Iliamna Lake' and airports.name='AMBLER';





----7----
--Napisz zapytanie, które zwróci sumaryczne pole powierzchni poligonów reprezentujących
--poszczególne typy drzew znajdujących się na obszarze tundry i bagien (swamps)
--sum wraca sume 
--ST_Area-pole 
--ST_within-

SELECT trees.geom from trees
SELECT trees.vegdesc from trees
SELECT tundra.geom from tundra
SELECT swamp.geom from swamp




SELECT SUM(ST_Area(trees.geom)), trees.vegdesc
	FROM trees, tundra, swamp
	WHERE ST_Within(trees.geom, tundra.geom)  OR ST_Within(trees.geom, swamp.geom) GROUP BY trees.vegdesc






Select vegdesc as description, Sum(ST_Area(trees.geom)) as total_area
from trees,swamp,tundra
where ST_Contains(tundra.geom, trees.geom) or ST_Contains(swamp.geom, trees.geom)
group by vegdesc;





